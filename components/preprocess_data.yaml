# PIPELINE DEFINITION
# Name: preprocess-data
# Inputs:
#    input_data: system.Dataset
#    test_size: float
#    train_size: float
#    valid_size: float
# Outputs:
#    test_data: system.Dataset
#    train_data: system.Dataset
#    valid_data: system.Dataset
components:
  comp-preprocess-data:
    executorLabel: exec-preprocess-data
    inputDefinitions:
      artifacts:
        input_data:
          artifactType:
            schemaTitle: system.Dataset
            schemaVersion: 0.0.1
      parameters:
        test_size:
          parameterType: NUMBER_DOUBLE
        train_size:
          parameterType: NUMBER_DOUBLE
        valid_size:
          parameterType: NUMBER_DOUBLE
    outputDefinitions:
      artifacts:
        test_data:
          artifactType:
            schemaTitle: system.Dataset
            schemaVersion: 0.0.1
        train_data:
          artifactType:
            schemaTitle: system.Dataset
            schemaVersion: 0.0.1
        valid_data:
          artifactType:
            schemaTitle: system.Dataset
            schemaVersion: 0.0.1
deploymentSpec:
  executors:
    exec-preprocess-data:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - preprocess_data
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.7.0'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"'  &&\
          \  python3 -m pip install --quiet --no-warn-script-location 'pandas' 'pyarrow'\
          \ 'fsspec' 'gcsfs' && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef preprocess_data(train_size : float \n                    , test_size\
          \ : float\n                    , valid_size : float\n                  \
          \  , train_data : Output[Dataset]\n                    , valid_data : Output[Dataset]\n\
          \                    , test_data : Output[Dataset]\n                   \
          \ , input_data:  Input[Dataset]\n                   ):\n\n    import numpy\
          \ as np\n    import pandas as pd\n\n    print(f\"train_size : {train_size}\"\
          )\n    print(f\"test_size : {test_size}\")\n    print(f\"valid_size : {valid_size}\"\
          )\n    print(f\"train_data : {train_data}\")\n    print(f\"valid_data :\
          \ {valid_data}\")\n    print(f\"test_data : {test_data}\")\n    print(f\"\
          input_data : {input_data}\")\n\n    data = pd.read_csv(input_data.path +\
          \ \".csv\")\n\n    modelling_columns = [\"season\" \n                  \
          \   , \"yr\" \n                     ,\"mnth\" \n                     ,\"\
          hr\" \n                     ,\"holiday\" \n                     , \"weekday\"\
          \ \n                     , \"workingday\" \n                     , \"weathersit\"\
          \ \n                     , \"temp\" \n                     , \"atemp\" \n\
          \                     , \"hum\" \n                     , \"windspeed\" \n\
          \                     , \"casual\" \n                     , \"registered\"\
          \ \n                     , \"cnt\"\n                    ]\n\n    data =\
          \ data[modelling_columns]\n\n    train_ds, valid_ds, test_ds = np.split(data.sample(frac=1,\
          \ random_state=42), [int((train_size)*len(data)), int((1-test_size)*len(data))])\n\
          \    train_ds.to_csv(train_data.path + \".csv\" , index=False, encoding='utf-8-sig')\n\
          \    valid_ds.to_csv(valid_data.path + \".csv\" , index=False, encoding='utf-8-sig')\n\
          \    test_ds.to_csv(test_data.path + \".csv\" , index=False, encoding='utf-8-sig')\n\
          \n"
        image: python:3.9
pipelineInfo:
  name: preprocess-data
root:
  dag:
    outputs:
      artifacts:
        test_data:
          artifactSelectors:
          - outputArtifactKey: test_data
            producerSubtask: preprocess-data
        train_data:
          artifactSelectors:
          - outputArtifactKey: train_data
            producerSubtask: preprocess-data
        valid_data:
          artifactSelectors:
          - outputArtifactKey: valid_data
            producerSubtask: preprocess-data
    tasks:
      preprocess-data:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-preprocess-data
        inputs:
          artifacts:
            input_data:
              componentInputArtifact: input_data
          parameters:
            test_size:
              componentInputParameter: test_size
            train_size:
              componentInputParameter: train_size
            valid_size:
              componentInputParameter: valid_size
        taskInfo:
          name: preprocess-data
  inputDefinitions:
    artifacts:
      input_data:
        artifactType:
          schemaTitle: system.Dataset
          schemaVersion: 0.0.1
    parameters:
      test_size:
        parameterType: NUMBER_DOUBLE
      train_size:
        parameterType: NUMBER_DOUBLE
      valid_size:
        parameterType: NUMBER_DOUBLE
  outputDefinitions:
    artifacts:
      test_data:
        artifactType:
          schemaTitle: system.Dataset
          schemaVersion: 0.0.1
      train_data:
        artifactType:
          schemaTitle: system.Dataset
          schemaVersion: 0.0.1
      valid_data:
        artifactType:
          schemaTitle: system.Dataset
          schemaVersion: 0.0.1
schemaVersion: 2.1.0
sdkVersion: kfp-2.7.0
